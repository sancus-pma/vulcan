ifndef CAN_AUTH_DIR
  CAN_AUTH_DIR        = ../../can-auth
endif

ifndef SLLVM_INSTALL_DIR
  CC            = sancus-cc
  LD            = sancus-ld
  SANCUS_CRYPTO = sancus-crypto
  SANCUS_SIM    = sancus-sim
else
  MCU           = msp430sancus
  SANCUS_DIR    = $(SLLVM_INSTALL_DIR)
  CC            = $(SLLVM_INSTALL_DIR)/bin/clang
  OPT           = $(SLLVM_INSTALL_DIR)/bin/opt
  LLC           = $(SLLVM_INSTALL_DIR)/bin/llc
  LD            = $(SLLVM_INSTALL_DIR)/bin/msp430-elf-gcc
  SANCUS_CRYPTO = $(SLLVM_INSTALL_DIR)/bin/crypto.py
  SANCUS_SIM    = $(SLLVM_INSTALL_DIR)/bin/sancus-sim
  AS            = $(SLLVM_INSTALL_DIR)/bin/msp430-elf-gcc
endif

ifndef SANCUS_DIR
  SANCUS_SUPPORT_DIR  = "/usr/local/share/sancus-support"
else
  SANCUS_SUPPORT_DIR  = ${SANCUS_DIR}/share/sancus-support
endif

SANCUS_LOAD         = sancus-loader
RM                  = rm -f

SANCUS_SECURITY     = 128
SANCUS_KEY          = deadbeefcafebabec0defeeddefec8ed
VENDOR_ID           = 1234
STACK_SIZE          = 128
RAM_SIZE            = 16K
ROM_SIZE            = 41K
FPGA_DEV            = /dev/ttyUSB0
FPGA_RATE           = 115200

VENDOR_KEY          = $(shell $(SANCUS_CRYPTO) --key $(SANCUS_KEY) --gen-vendor-key $(VENDOR_ID) | xxd -p)
MEMFLAGS            = --ram $(RAM_SIZE) --rom $(ROM_SIZE) 

CFLAGS =
CFLAGS += -include$(CAN_AUTH_DIR)/$(LIBVULCAN).h 
CFLAGS += -Wfatal-errors
CFLAGS += -fcolor-diagnostics

LDFLAGS =
LDFLAGS += -L$(SANCUS_SUPPORT_DIR)/lib/
LDFLAGS += -lsm-io 
LDFLAGS += -ldev 

ifndef SLLVM_INSTALL_DIR
  CFLAGS += -I$(SANCUS_SUPPORT_DIR)/include/ 
  CFLAGS += -Os
  CFLAGS += -g

  LDFLAGS += $(MEMFLAGS)
  LDFLAGS += --inline-arithmetic
  LDFLAGS += --standalone
  LDFLAGS += --verbose
else
  INCFLAGS =
  INCFLAGS += -I $(SLLVM_INSTALL_DIR)/include
  INCFLAGS += -I $(SLLVM_INSTALL_DIR)/msp430-elf/include
  INCFLAGS += -I $(SLLVM_INSTALL_DIR)/share/sancus-support/include
  INCFLAGS += -I $(SLLVM_INSTALL_DIR)/share/sancus-compiler/include

  CFLAGS += $(INCFLAGS)
  CFLAGS += -D__$(shell echo $(MCU) | tr a-z A-Z)__
  CFLAGS += -DCONFIG_SECURITY=$(SANCUS_SECURITY)
  CFLAGS += -Werror
  CFLAGS += -Wno-\#warnings
  CFLAGS += -O0
  CFLAGS += -target msp430-elf
  CFLAGS += -emit-llvm

  SLLVM_TRANSFORM_FLAGS =  
  SLLVM_TRANSFORM_FLAGS += --load $(SLLVM_INSTALL_DIR)/lib/SLLVM.so
  SLLVM_TRANSFORM_FLAGS += --sllvm-transform

  SANCUS_TRANSFORM_FLAGS = 
  SANCUS_TRANSFORM_FLAGS += --load $(SLLVM_INSTALL_DIR)/lib/SLLVM.so
  SANCUS_TRANSFORM_FLAGS += --sancus-transform
  SANCUS_TRANSFORM_FLAGS += --key-size $(SANCUS_SECURITY)
  SANCUS_TRANSFORM_FLAGS += --stack-size $(STACK_SIZE)
  SANCUS_TRANSFORM_FLAGS += --vendor-id 0x$(VENDOR_ID)

  LLCFLAGS =
  LLCFLAGS += -O3

  ASFLAGS =
  ASFLAGS += $(INCFLAGS)
  ASFLAGS += -mmcu=$(MCU)

  LDFLAGS += -L $(SLLVM_INSTALL_DIR)/share/sancus-compiler/lib
  LDFLAGS += -l sancus-sm-support
  LDFLAGS += -L $(SLLVM_INSTALL_DIR)/include # For devices.csv and $(MCU).ld
  LDFLAGS += -Wl,-gc-sections # To garbage collect unused trusted rt functions
  LDFLAGS += -mmcu=$(MCU)
endif

SIMFLAGS =
SIMFLAGS += $(MEMFLAGS)

CRYPTOFLAGS =
CRYPTOFLAGS += --key $(VENDOR_KEY)
CRYPTOFLAGS += --verbose
CRYPTOFLAGS += --fill-macs

LOADFLAGS =
LOADFLAGS += -device $(FPGA_DEV) 
LOADFLAGS += -baudrate $(FPGA_RATE)
LOADFLAGS += -dump-io

ifndef LIBVULCAN
    LIBVULCAN = vatican
endif

ifeq ($(QUIET),1)
    CFLAGS += -D__SANCUS_IO_QUIET=1
endif

ifeq ($(BENCH),1)
    CFLAGS += -D__SANCUS_IO_BENCH=1
endif

ifeq ($(BENCH_MAC),1)
    CFLAGS += -DBENCH_MAC_COMPUTATION=1
endif

ifdef TRAVIS
    CFLAGS += -DTRAVIS=1
endif

ifdef VULCAN_SM
    CFLAGS += -DVULCAN_SM=$(VULCAN_SM)
endif

ifdef CAN_DRV_SM
    CFLAGS += -DCAN_DRV_SM=$(CAN_DRV_SM)
endif

ifeq ($(NOAUTH),1)
    CFLAGS += -DNOAUTH
endif

ifeq ($(NG),1)
    CFLAGS += -DVATICAN_INCLUDE_NONCE_GENERATOR=1
endif

#----------------------------------------------------------------------------

ifdef SLLVM_INSTALL_DIR

.SUFFIXES:

.PRECIOUS: %.ll
.PRECIOUS: %.sllvm.ll
.PRECIOUS: %.sancus.ll
.PRECIOUS: %.s

%.ll: %.c
	$(CC) $(CFLAGS) -S $< -o $@

%.sllvm.ll: %.ll
	$(OPT) $(SLLVM_TRANSFORM_FLAGS) -S $< -o $@ > /dev/null

%.sancus.ll: %.sllvm.ll
	$(OPT) $(SANCUS_TRANSFORM_FLAGS) -S $< -o $@ > /dev/null

%.s: %.sancus.ll
	$(LLC) $(LLCFLAGS) $< -o $@

%.o: %.s
	$(AS) $(ASFLAGS) -c $< -o $@

endif
